{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/adam\/init(_:device:learningrate:b1:b2:eps:l2normalize:)","title":"init(Trainable, device: Device, learningRate: Float, b1: Float, b2: Float, eps: Float, l2Normalize: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/adam\/clip","title":"var clip: Float?","type":"property"},{"path":"\/documentation\/neuron\/adam\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/adam\/gradientaccumulator","title":"let gradientAccumulator: GradientAccumulator","type":"property"},{"path":"\/documentation\/neuron\/adam\/istraining","title":"var isTraining: Bool","type":"property"},{"path":"\/documentation\/neuron\/adam\/l2normalize","title":"var l2Normalize: Bool","type":"property"},{"path":"\/documentation\/neuron\/adam\/learningrate","title":"var learningRate: Float","type":"property"},{"path":"\/documentation\/neuron\/adam\/metricsreporter","title":"var metricsReporter: MetricsReporter?","type":"property"},{"path":"\/documentation\/neuron\/adam\/trainable","title":"var trainable: Trainable","type":"property"},{"path":"\/documentation\/neuron\/adam\/workers","title":"var workers: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/adam\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/neuron\/adam\/step()","title":"func step()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/adam\/apply(_:)","title":"func apply(Tensor.Gradient)","type":"method"},{"path":"\/documentation\/neuron\/adam\/callasfunction(_:)","title":"func callAsFunction([Tensor]) -> [Tensor]","type":"method"},{"path":"\/documentation\/neuron\/adam\/clip(layer:)","title":"func clip(layer: Layer)","type":"method"},{"path":"\/documentation\/neuron\/adam\/fit(_:labels:lossfunction:validation:requiresgradients:)","title":"func fit([Tensor], labels: [Tensor], lossFunction: LossFunction, validation: Bool, requiresGradients: Bool) -> Self.Output","type":"method"},{"path":"\/documentation\/neuron\/adam\/predict(_:)","title":"func predict([Tensor]) -> [Tensor]","type":"method"},{"path":"\/documentation\/neuron\/adam\/zerogradients()","title":"func zeroGradients()","type":"method"}],"path":"\/documentation\/neuron\/adam\/optimizer-implementations","title":"Optimizer Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/adam","title":"Adam","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/batchnormalize\/init(from:)","title":"convenience init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/neuron\/batchnormalize\/init(gamma:beta:momentum:movingmean:movingvariance:inputsize:)","title":"init(gamma: [Tensor.Scalar], beta: [Tensor.Scalar], momentum: Tensor.Scalar, movingMean: [Tensor.Scalar], movingVariance: [Tensor.Scalar], inputSize: TensorSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/batchnormalize\/beta","title":"var beta: [Tensor.Scalar]","type":"property"},{"path":"\/documentation\/neuron\/batchnormalize\/biasenabled","title":"var biasEnabled: Bool","type":"property"},{"path":"\/documentation\/neuron\/batchnormalize\/biases","title":"var biases: Tensor","type":"property"},{"path":"\/documentation\/neuron\/batchnormalize\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/batchnormalize\/encodingtype","title":"var encodingType: EncodingType","type":"property"},{"path":"\/documentation\/neuron\/batchnormalize\/gamma","title":"var gamma: [Tensor.Scalar]","type":"property"},{"path":"\/documentation\/neuron\/batchnormalize\/initializer","title":"var initializer: Initializer?","type":"property"},{"path":"\/documentation\/neuron\/batchnormalize\/inputsize","title":"var inputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/batchnormalize\/momentum","title":"let momentum: Tensor.Scalar","type":"property"},{"path":"\/documentation\/neuron\/batchnormalize\/movingmean","title":"var movingMean: [Tensor.Scalar]","type":"property"},{"path":"\/documentation\/neuron\/batchnormalize\/movingvariance","title":"var movingVariance: [Tensor.Scalar]","type":"property"},{"path":"\/documentation\/neuron\/batchnormalize\/outputsize","title":"var outputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/batchnormalize\/trainable","title":"var trainable: Bool","type":"property"},{"path":"\/documentation\/neuron\/batchnormalize\/weights","title":"var weights: Tensor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/batchnormalize\/apply(gradients:)","title":"func apply(gradients: (weights: Tensor, biases: Tensor))","type":"method"},{"path":"\/documentation\/neuron\/batchnormalize\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/neuron\/batchnormalize\/forward(tensor:)","title":"func forward(tensor: Tensor) -> Tensor","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/neuron\/batchnormalize\/codingkeys\/beta","title":"case beta","type":"case"},{"path":"\/documentation\/neuron\/batchnormalize\/codingkeys\/gamma","title":"case gamma","type":"case"},{"path":"\/documentation\/neuron\/batchnormalize\/codingkeys\/inputsize","title":"case inputSize","type":"case"},{"path":"\/documentation\/neuron\/batchnormalize\/codingkeys\/momentum","title":"case momentum","type":"case"},{"path":"\/documentation\/neuron\/batchnormalize\/codingkeys\/movingmean","title":"case movingMean","type":"case"},{"path":"\/documentation\/neuron\/batchnormalize\/codingkeys\/movingvariance","title":"case movingVariance","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/batchnormalize\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/neuron\/batchnormalize\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/neuron\/batchnormalize\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/batchnormalize\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/neuron\/batchnormalize\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/neuron\/batchnormalize\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/neuron\/batchnormalize\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/neuron\/batchnormalize\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/batchnormalize\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/batchnormalize\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/neuron\/batchnormalize\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/batchnormalize\/codingkeys","title":"BatchNormalize.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/batchnormalize\/extraencodables","title":"var extraEncodables: [String : Codable]?","type":"property"}],"path":"\/documentation\/neuron\/batchnormalize\/layer-implementations","title":"Layer Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/batchnormalize","title":"BatchNormalize","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/classifier\/init(optimizer:epochs:batchsize:accuracythreshold:killonaccuracy:threadworkers:log:)","title":"init(optimizer: Optimizer, epochs: Int, batchSize: Int, accuracyThreshold: Float, killOnAccuracy: Bool, threadWorkers: Int, log: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/classifier\/onaccuracyreached","title":"var onAccuracyReached: (() -> ())?","type":"property"},{"path":"\/documentation\/neuron\/classifier\/onepochcompleted","title":"var onEpochCompleted: (() -> ())?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/classifier\/feed(_:)","title":"func feed([Tensor]) -> [Tensor]","type":"method"},{"path":"\/documentation\/neuron\/classifier\/fit(_:_:)","title":"func fit([DatasetModel], [DatasetModel])","type":"method"}],"path":"\/documentation\/neuron\/classifier","title":"Classifier","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/conv2d\/init(filtercount:inputsize:strides:padding:filtersize:initializer:biasenabled:)","title":"init(filterCount: Int, inputSize: TensorSize?, strides: (rows: Int, columns: Int), padding: NumSwift.ConvPadding, filterSize: (rows: Int, columns: Int), initializer: InitializerType, biasEnabled: Bool)","type":"init"},{"path":"\/documentation\/neuron\/conv2d\/init(from:)","title":"convenience init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/conv2d\/biasenabled","title":"var biasEnabled: Bool","type":"property"},{"path":"\/documentation\/neuron\/conv2d\/biases","title":"var biases: Tensor","type":"property"},{"path":"\/documentation\/neuron\/conv2d\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/conv2d\/encodingtype","title":"var encodingType: EncodingType","type":"property"},{"path":"\/documentation\/neuron\/conv2d\/filtercount","title":"var filterCount: Int","type":"property"},{"path":"\/documentation\/neuron\/conv2d\/filtersize","title":"var filterSize: (rows: Int, columns: Int)","type":"property"},{"path":"\/documentation\/neuron\/conv2d\/filters","title":"var filters: [Tensor]","type":"property"},{"path":"\/documentation\/neuron\/conv2d\/initializer","title":"var initializer: Initializer?","type":"property"},{"path":"\/documentation\/neuron\/conv2d\/inputsize","title":"var inputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/conv2d\/outputsize","title":"var outputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/conv2d\/padding","title":"var padding: NumSwift.ConvPadding","type":"property"},{"path":"\/documentation\/neuron\/conv2d\/strides","title":"var strides: (rows: Int, columns: Int)","type":"property"},{"path":"\/documentation\/neuron\/conv2d\/trainable","title":"var trainable: Bool","type":"property"},{"path":"\/documentation\/neuron\/conv2d\/weights","title":"var weights: Tensor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/conv2d\/apply(gradients:)","title":"func apply(gradients: (weights: Tensor, biases: Tensor))","type":"method"},{"path":"\/documentation\/neuron\/conv2d\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/neuron\/conv2d\/forward(tensor:)","title":"func forward(tensor: Tensor) -> Tensor","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/conv2d\/extraencodables","title":"var extraEncodables: [String : Codable]?","type":"property"}],"path":"\/documentation\/neuron\/conv2d\/layer-implementations","title":"Layer Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/conv2d","title":"Conv2d","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/dense\/init(_:inputs:initializer:biasenabled:)","title":"init(Int, inputs: Int?, initializer: InitializerType, biasEnabled: Bool)","type":"init"},{"path":"\/documentation\/neuron\/dense\/init(from:)","title":"convenience init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/dense\/biasenabled","title":"var biasEnabled: Bool","type":"property"},{"path":"\/documentation\/neuron\/dense\/biases","title":"var biases: Tensor","type":"property"},{"path":"\/documentation\/neuron\/dense\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/dense\/encodingtype","title":"var encodingType: EncodingType","type":"property"},{"path":"\/documentation\/neuron\/dense\/initializer","title":"var initializer: Initializer?","type":"property"},{"path":"\/documentation\/neuron\/dense\/inputsize","title":"var inputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/dense\/outputsize","title":"let outputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/dense\/trainable","title":"var trainable: Bool","type":"property"},{"path":"\/documentation\/neuron\/dense\/weights","title":"var weights: Tensor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/dense\/apply(gradients:)","title":"func apply(gradients: (weights: Tensor, biases: Tensor))","type":"method"},{"path":"\/documentation\/neuron\/dense\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/neuron\/dense\/forward(tensor:)","title":"func forward(tensor: Tensor) -> Tensor","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/dense\/extraencodables","title":"var extraEncodables: [String : Codable]?","type":"property"}],"path":"\/documentation\/neuron\/dense\/layer-implementations","title":"Layer Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/dense","title":"Dense","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/dropout\/init(_:inputsize:)","title":"init(Float, inputSize: TensorSize)","type":"init"},{"path":"\/documentation\/neuron\/dropout\/init(from:)","title":"convenience init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/dropout\/biasenabled","title":"var biasEnabled: Bool","type":"property"},{"path":"\/documentation\/neuron\/dropout\/biases","title":"var biases: Tensor","type":"property"},{"path":"\/documentation\/neuron\/dropout\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/dropout\/encodingtype","title":"var encodingType: EncodingType","type":"property"},{"path":"\/documentation\/neuron\/dropout\/initializer","title":"var initializer: Initializer?","type":"property"},{"path":"\/documentation\/neuron\/dropout\/inputsize","title":"var inputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/dropout\/outputsize","title":"var outputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/dropout\/trainable","title":"var trainable: Bool","type":"property"},{"path":"\/documentation\/neuron\/dropout\/weights","title":"var weights: Tensor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/dropout\/apply(gradients:)","title":"func apply(gradients: (weights: Tensor, biases: Tensor))","type":"method"},{"path":"\/documentation\/neuron\/dropout\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/neuron\/dropout\/forward(tensor:)","title":"func forward(tensor: Tensor) -> Tensor","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/dropout\/extraencodables","title":"var extraEncodables: [String : Codable]?","type":"property"}],"path":"\/documentation\/neuron\/dropout\/layer-implementations","title":"Layer Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/dropout","title":"Dropout","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/flatten\/init(from:)","title":"convenience init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/neuron\/flatten\/init(inputsize:)","title":"init(inputSize: TensorSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/flatten\/biasenabled","title":"var biasEnabled: Bool","type":"property"},{"path":"\/documentation\/neuron\/flatten\/biases","title":"var biases: Tensor","type":"property"},{"path":"\/documentation\/neuron\/flatten\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/flatten\/encodingtype","title":"var encodingType: EncodingType","type":"property"},{"path":"\/documentation\/neuron\/flatten\/initializer","title":"var initializer: Initializer?","type":"property"},{"path":"\/documentation\/neuron\/flatten\/inputsize","title":"var inputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/flatten\/outputsize","title":"var outputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/flatten\/trainable","title":"var trainable: Bool","type":"property"},{"path":"\/documentation\/neuron\/flatten\/weights","title":"var weights: Tensor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/flatten\/apply(gradients:)","title":"func apply(gradients: (weights: Tensor, biases: Tensor))","type":"method"},{"path":"\/documentation\/neuron\/flatten\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/neuron\/flatten\/forward(tensor:)","title":"func forward(tensor: Tensor) -> Tensor","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/flatten\/extraencodables","title":"var extraEncodables: [String : Codable]?","type":"property"}],"path":"\/documentation\/neuron\/flatten\/layer-implementations","title":"Layer Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/flatten","title":"Flatten","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/gan\/init(generator:discriminator:epochs:batchsize:discriminatorsteps:generatorsteps:discriminatornoisefactor:threadworkers:validationfrequency:)","title":"init(generator: Optimizer, discriminator: Optimizer, epochs: Int, batchSize: Int, discriminatorSteps: Int, generatorSteps: Int, discriminatorNoiseFactor: Tensor.Scalar?, threadWorkers: Int, validationFrequency: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/gan\/discriminator","title":"var discriminator: Optimizer","type":"property"},{"path":"\/documentation\/neuron\/gan\/epochs","title":"var epochs: Int","type":"property"},{"path":"\/documentation\/neuron\/gan\/fakelabel","title":"var fakeLabel: Tensor.Scalar","type":"property"},{"path":"\/documentation\/neuron\/gan\/generator","title":"var generator: Optimizer","type":"property"},{"path":"\/documentation\/neuron\/gan\/lossfunction","title":"var lossFunction: LossFunction","type":"property"},{"path":"\/documentation\/neuron\/gan\/noise","title":"var noise: () -> [Tensor.Scalar]","type":"property"},{"path":"\/documentation\/neuron\/gan\/oncompleted","title":"var onCompleted: (() -> ())?","type":"property"},{"path":"\/documentation\/neuron\/gan\/onepochcompleted","title":"var onEpochCompleted: ((Int) -> ())?","type":"property"},{"path":"\/documentation\/neuron\/gan\/reallabel","title":"var realLabel: Tensor.Scalar","type":"property"},{"path":"\/documentation\/neuron\/gan\/validategenerator","title":"var validateGenerator: ((Tensor) -> ())?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/gan\/discriminate(_:)","title":"func discriminate([Tensor]) -> Tensor","type":"method"},{"path":"\/documentation\/neuron\/gan\/export(overrite:)","title":"func export(overrite: Bool) -> (discriminator: URL?, generator: URL?)","type":"method"},{"path":"\/documentation\/neuron\/gan\/fit(_:_:)","title":"func fit([DatasetModel], [DatasetModel])","type":"method"},{"path":"\/documentation\/neuron\/gan\/generate()","title":"func generate() -> Tensor","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/neuron\/gan\/trainingtype\/fake","title":"case fake","type":"case"},{"path":"\/documentation\/neuron\/gan\/trainingtype\/real","title":"case real","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/gan\/trainingtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/neuron\/gan\/trainingtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/neuron\/gan\/trainingtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/gan\/trainingtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/gan\/trainingtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/neuron\/gan\/trainingtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/gan\/trainingtype","title":"GAN.TrainingType","type":"enum"}],"path":"\/documentation\/neuron\/gan","title":"GAN","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/gpu\/qospriority","title":"var qosPriority: DispatchQoS.QoSClass","type":"property"},{"path":"\/documentation\/neuron\/gpu\/type","title":"var type: DeviceType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/gpu\/activate(_:_:)","title":"func activate(Tensor, Activation) -> Tensor","type":"method"},{"path":"\/documentation\/neuron\/gpu\/conv2d(signal:filter:strides:padding:filtersize:inputsize:outputsize:)","title":"func conv2d(signal: [[Tensor.Scalar]], filter: [[Tensor.Scalar]], strides: (Int, Int), padding: NumSwift.ConvPadding, filterSize: (rows: Int, columns: Int), inputSize: (rows: Int, columns: Int), outputSize: (rows: Int, columns: Int)?) -> [[Tensor.Scalar]]","type":"method"},{"path":"\/documentation\/neuron\/gpu\/derivate(_:_:)","title":"func derivate(Tensor, Activation) -> Tensor","type":"method"},{"path":"\/documentation\/neuron\/gpu\/matrixmultiply(_:_:columns:rows:)","title":"func matrixMultiply(Tensor, Tensor, columns: Int, rows: Int) -> Tensor","type":"method"},{"path":"\/documentation\/neuron\/gpu\/transconv2d(signal:filter:strides:padding:filtersize:inputsize:outputsize:)","title":"func transConv2d(signal: [[Tensor.Scalar]], filter: [[Tensor.Scalar]], strides: (Int, Int), padding: NumSwift.ConvPadding, filterSize: (rows: Int, columns: Int), inputSize: (rows: Int, columns: Int), outputSize: (rows: Int, columns: Int)?) -> [[Tensor.Scalar]]","type":"method"}],"path":"\/documentation\/neuron\/gpu","title":"GPU","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/gpumanager\/activate(_:_:derivate:)","title":"func activate([Float], Activation, derivate: Bool) -> [Float]","type":"method"},{"path":"\/documentation\/neuron\/gpumanager\/conv2d(_:filters:biases:filtercount:filtersize:strides:inputsize:outputsize:)","title":"func conv2d(Tensor, filters: [Tensor], biases: Tensor, filterCount: Int, filterSize: (rows: Int, columns: Int), strides: (rows: Int, columns: Int), inputSize: (rows: Int, columns: Int, depth: Int), outputSize: (rows: Int, columns: Int, depth: Int))","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/gpumanager\/shared","title":"static let shared: GPUManager","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/neuron\/gpumanager\/metalfunction\/activation","title":"case activation","type":"case"},{"path":"\/documentation\/neuron\/gpumanager\/metalfunction\/derivate","title":"case derivate","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/gpumanager\/metalfunction\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/neuron\/gpumanager\/metalfunction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/neuron\/gpumanager\/metalfunction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/gpumanager\/metalfunction\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/gpumanager\/metalfunction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/neuron\/gpumanager\/metalfunction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/gpumanager\/metalfunction","title":"GPUManager.MetalFunction","type":"enum"}],"path":"\/documentation\/neuron\/gpumanager","title":"GPUManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/gaussian\/init(std:mean:)","title":"init(std: Double, mean: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/gaussian\/gaussrand","title":"var gaussRand: Double","type":"property"}],"path":"\/documentation\/neuron\/gaussian","title":"Gaussian","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/gradientaccumulator\/average","title":"var average: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/gradientaccumulator\/accumulate(clearatend:)","title":"func accumulate(clearAtEnd: Bool) -> Tensor.Gradient","type":"method"},{"path":"\/documentation\/neuron\/gradientaccumulator\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/neuron\/gradientaccumulator\/insert(_:)","title":"func insert(Tensor.Gradient)","type":"method"},{"path":"\/documentation\/neuron\/gradientaccumulator\/insert(input:weights:biases:)","title":"func insert(input: Tensor, weights: [Tensor], biases: [Tensor])","type":"method"}],"path":"\/documentation\/neuron\/gradientaccumulator","title":"GradientAccumulator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/layermodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/layermodel\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/neuron\/layermodel\/codingkeys\/layer","title":"case layer","type":"case"},{"path":"\/documentation\/neuron\/layermodel\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/layermodel\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/neuron\/layermodel\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/neuron\/layermodel\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/layermodel\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/neuron\/layermodel\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/neuron\/layermodel\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/neuron\/layermodel\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/neuron\/layermodel\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/layermodel\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/layermodel\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/neuron\/layermodel\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/layermodel\/codingkeys","title":"LayerModel.CodingKeys","type":"enum"}],"path":"\/documentation\/neuron\/layermodel","title":"LayerModel","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/layernormalize\/init(epsilon:gamma:beta:inputsize:)","title":"init(epsilon: Tensor.Scalar, gamma: [Tensor.Scalar], beta: [Tensor.Scalar], inputSize: TensorSize)","type":"init"},{"path":"\/documentation\/neuron\/layernormalize\/init(from:)","title":"convenience init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/layernormalize\/beta","title":"var beta: [Tensor.Scalar]","type":"property"},{"path":"\/documentation\/neuron\/layernormalize\/biasenabled","title":"var biasEnabled: Bool","type":"property"},{"path":"\/documentation\/neuron\/layernormalize\/biases","title":"var biases: Tensor","type":"property"},{"path":"\/documentation\/neuron\/layernormalize\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/layernormalize\/encodingtype","title":"var encodingType: EncodingType","type":"property"},{"path":"\/documentation\/neuron\/layernormalize\/gamma","title":"var gamma: [Tensor.Scalar]","type":"property"},{"path":"\/documentation\/neuron\/layernormalize\/initializer","title":"var initializer: Initializer?","type":"property"},{"path":"\/documentation\/neuron\/layernormalize\/inputsize","title":"var inputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/layernormalize\/outputsize","title":"var outputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/layernormalize\/trainable","title":"var trainable: Bool","type":"property"},{"path":"\/documentation\/neuron\/layernormalize\/weights","title":"var weights: Tensor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/layernormalize\/apply(gradients:)","title":"func apply(gradients: (weights: Tensor, biases: Tensor))","type":"method"},{"path":"\/documentation\/neuron\/layernormalize\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/neuron\/layernormalize\/forward(tensor:)","title":"func forward(tensor: Tensor) -> Tensor","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/neuron\/layernormalize\/codingkeys\/beta","title":"case beta","type":"case"},{"path":"\/documentation\/neuron\/layernormalize\/codingkeys\/epsilon","title":"case epsilon","type":"case"},{"path":"\/documentation\/neuron\/layernormalize\/codingkeys\/gamma","title":"case gamma","type":"case"},{"path":"\/documentation\/neuron\/layernormalize\/codingkeys\/inputsize","title":"case inputSize","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/layernormalize\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/neuron\/layernormalize\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/neuron\/layernormalize\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/layernormalize\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/neuron\/layernormalize\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/neuron\/layernormalize\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/neuron\/layernormalize\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/neuron\/layernormalize\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/layernormalize\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/layernormalize\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/neuron\/layernormalize\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/layernormalize\/codingkeys","title":"LayerNormalize.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/layernormalize\/extraencodables","title":"var extraEncodables: [String : Codable]?","type":"property"}],"path":"\/documentation\/neuron\/layernormalize\/layer-implementations","title":"Layer Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/layernormalize","title":"LayerNormalize","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/leakyrelu\/init(from:)","title":"convenience init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/neuron\/leakyrelu\/init(limit:)","title":"init(limit: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/leakyrelu\/biasenabled","title":"var biasEnabled: Bool","type":"property"},{"path":"\/documentation\/neuron\/leakyrelu\/biases","title":"var biases: Tensor","type":"property"},{"path":"\/documentation\/neuron\/leakyrelu\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/leakyrelu\/encodingtype","title":"var encodingType: EncodingType","type":"property"},{"path":"\/documentation\/neuron\/leakyrelu\/initializer","title":"var initializer: Initializer?","type":"property"},{"path":"\/documentation\/neuron\/leakyrelu\/inputsize","title":"var inputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/leakyrelu\/outputsize","title":"var outputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/leakyrelu\/trainable","title":"var trainable: Bool","type":"property"},{"path":"\/documentation\/neuron\/leakyrelu\/type","title":"var type: Activation","type":"property"},{"path":"\/documentation\/neuron\/leakyrelu\/weights","title":"var weights: Tensor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/leakyrelu\/apply(gradients:)","title":"func apply(gradients: (weights: Tensor, biases: Tensor))","type":"method"},{"path":"\/documentation\/neuron\/leakyrelu\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/neuron\/leakyrelu\/forward(tensor:)","title":"func forward(tensor: Tensor) -> Tensor","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/leakyrelu\/extraencodables","title":"var extraEncodables: [String : Codable]?","type":"property"}],"path":"\/documentation\/neuron\/leakyrelu\/layer-implementations","title":"Layer Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/leakyrelu","title":"LeakyReLu","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/mnist\/init(only:label:zerocentered:)","title":"init(only: Int?, label: [Float], zeroCentered: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/mnist\/complete","title":"var complete: Bool","type":"property"},{"path":"\/documentation\/neuron\/mnist\/data","title":"var data: DatasetData","type":"property"},{"path":"\/documentation\/neuron\/mnist\/datapassthroughsubject","title":"let dataPassthroughSubject: PassthroughSubject<DatasetData, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/mnist\/build()-38j8d","title":"func build() async -> DatasetData","type":"method"},{"path":"\/documentation\/neuron\/mnist\/build()-3t543","title":"func build()","type":"method"},{"path":"\/documentation\/neuron\/mnist\/build(only:)","title":"func build(only: Int) async -> DatasetData","type":"method"},{"path":"\/documentation\/neuron\/mnist\/get(type:)","title":"func get(type: MNIST.MNISTType) -> [[[Float]]]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/neuron\/mnist\/mnisttype\/traininglabels","title":"case trainingLabels","type":"case"},{"path":"\/documentation\/neuron\/mnist\/mnisttype\/trainingset","title":"case trainingSet","type":"case"},{"path":"\/documentation\/neuron\/mnist\/mnisttype\/vallabels","title":"case valLabels","type":"case"},{"path":"\/documentation\/neuron\/mnist\/mnisttype\/valset","title":"case valSet","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/mnist\/mnisttype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/neuron\/mnist\/mnisttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/neuron\/mnist\/mnisttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/mnist\/mnisttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/mnist\/mnisttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/neuron\/mnist\/mnisttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/mnist\/mnisttype","title":"MNIST.MNISTType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/mnist\/datapublisher","title":"var dataPublisher: AnyPublisher<DatasetData, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/mnist\/bitmap(path:offset:)","title":"func bitmap(path: String, offset: Int) -> [UInt8]","type":"method"},{"path":"\/documentation\/neuron\/mnist\/format(data:offset:)","title":"func format(data: Data, offset: Int) -> [UInt8]","type":"method"},{"path":"\/documentation\/neuron\/mnist\/read(data:offset:scaleby:)","title":"func read<T>(data: Data, offset: Int, scaleBy: T) -> [T]","type":"method"},{"path":"\/documentation\/neuron\/mnist\/read(path:offset:scaleby:)","title":"func read<T>(path: String, offset: Int, scaleBy: T) -> [T]","type":"method"}],"path":"\/documentation\/neuron\/mnist\/dataset-implementations","title":"Dataset Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/mnist","title":"MNIST","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/maxpool\/init(from:)","title":"convenience init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/neuron\/maxpool\/init(inputsize:)","title":"init(inputSize: TensorSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/maxpool\/biasenabled","title":"var biasEnabled: Bool","type":"property"},{"path":"\/documentation\/neuron\/maxpool\/biases","title":"var biases: Tensor","type":"property"},{"path":"\/documentation\/neuron\/maxpool\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/maxpool\/encodingtype","title":"var encodingType: EncodingType","type":"property"},{"path":"\/documentation\/neuron\/maxpool\/initializer","title":"var initializer: Initializer?","type":"property"},{"path":"\/documentation\/neuron\/maxpool\/inputsize","title":"var inputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/maxpool\/outputsize","title":"var outputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/maxpool\/trainable","title":"var trainable: Bool","type":"property"},{"path":"\/documentation\/neuron\/maxpool\/weights","title":"var weights: Tensor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/maxpool\/apply(gradients:)","title":"func apply(gradients: (weights: Tensor, biases: Tensor))","type":"method"},{"path":"\/documentation\/neuron\/maxpool\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/neuron\/maxpool\/forward(tensor:)","title":"func forward(tensor: Tensor) -> Tensor","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/maxpool\/extraencodables","title":"var extraEncodables: [String : Codable]?","type":"property"}],"path":"\/documentation\/neuron\/maxpool\/layer-implementations","title":"Layer Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/maxpool","title":"MaxPool","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/metricsreporter\/init(frequency:metricstogather:)","title":"init(frequency: Int, metricsToGather: Set<Metric>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/metricsreporter\/lock","title":"var lock: NSLock","type":"property"},{"path":"\/documentation\/neuron\/metricsreporter\/metrics","title":"var metrics: [Metric : Float]","type":"property"},{"path":"\/documentation\/neuron\/metricsreporter\/metricstogather","title":"var metricsToGather: Set<Metric>","type":"property"},{"path":"\/documentation\/neuron\/metricsreporter\/receive","title":"var receive: (([Metric : Float]) -> ())?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/metricsreporter\/addmetric(value:key:)","title":"func addMetric(value: Float, key: Metric)","type":"method"}],"path":"\/documentation\/neuron\/metricsreporter\/metriclogger-implementations","title":"MetricLogger Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/metricsreporter","title":"MetricsReporter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/quickdrawdataset\/init(objecttoget:label:trainingcount:validationcount:zerocentered:loglevel:)","title":"init(objectToGet: QuickDrawObject, label: [Float], trainingCount: Int, validationCount: Int, zeroCentered: Bool, logLevel: LogLevel)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/quickdrawdataset\/complete","title":"var complete: Bool","type":"property"},{"path":"\/documentation\/neuron\/quickdrawdataset\/data","title":"var data: DatasetData","type":"property"},{"path":"\/documentation\/neuron\/quickdrawdataset\/datapassthroughsubject","title":"var dataPassthroughSubject: PassthroughSubject<DatasetData, Never>","type":"property"},{"path":"\/documentation\/neuron\/quickdrawdataset\/loglevel-7y4wg","title":"var logLevel: LogLevel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/quickdrawdataset\/build()-4u6r0","title":"func build()","type":"method"},{"path":"\/documentation\/neuron\/quickdrawdataset\/build()-97jsn","title":"func build() async -> DatasetData","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/quickdrawdataset\/datapublisher","title":"var dataPublisher: AnyPublisher<DatasetData, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/quickdrawdataset\/bitmap(path:offset:)","title":"func bitmap(path: String, offset: Int) -> [UInt8]","type":"method"},{"path":"\/documentation\/neuron\/quickdrawdataset\/format(data:offset:)","title":"func format(data: Data, offset: Int) -> [UInt8]","type":"method"},{"path":"\/documentation\/neuron\/quickdrawdataset\/read(data:offset:scaleby:)","title":"func read<T>(data: Data, offset: Int, scaleBy: T) -> [T]","type":"method"},{"path":"\/documentation\/neuron\/quickdrawdataset\/read(path:offset:scaleby:)","title":"func read<T>(path: String, offset: Int, scaleBy: T) -> [T]","type":"method"}],"path":"\/documentation\/neuron\/quickdrawdataset\/dataset-implementations","title":"Dataset Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/quickdrawdataset\/loglevel-9jn3d","title":"var logLevel: LogLevel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/quickdrawdataset\/log(type:priority:message:)","title":"func log(type: LogType, priority: LogPriority, message: String)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/quickdrawdataset\/oslogger","title":"static var osLogger: OSLog","type":"property"}],"path":"\/documentation\/neuron\/quickdrawdataset\/logger-implementations","title":"Logger Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/quickdrawdataset","title":"QuickDrawDataset","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/rmsprop\/init(_:device:learningrate:b:eps:l2normalize:)","title":"init(Trainable, device: Device, learningRate: Float, b: Float, eps: Float, l2Normalize: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/rmsprop\/clip","title":"var clip: Float?","type":"property"},{"path":"\/documentation\/neuron\/rmsprop\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/rmsprop\/gradientaccumulator","title":"let gradientAccumulator: GradientAccumulator","type":"property"},{"path":"\/documentation\/neuron\/rmsprop\/istraining","title":"var isTraining: Bool","type":"property"},{"path":"\/documentation\/neuron\/rmsprop\/l2normalize","title":"var l2Normalize: Bool","type":"property"},{"path":"\/documentation\/neuron\/rmsprop\/learningrate","title":"var learningRate: Float","type":"property"},{"path":"\/documentation\/neuron\/rmsprop\/metricsreporter","title":"var metricsReporter: MetricsReporter?","type":"property"},{"path":"\/documentation\/neuron\/rmsprop\/trainable","title":"var trainable: Trainable","type":"property"},{"path":"\/documentation\/neuron\/rmsprop\/workers","title":"var workers: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/rmsprop\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/neuron\/rmsprop\/step()","title":"func step()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/rmsprop\/apply(_:)","title":"func apply(Tensor.Gradient)","type":"method"},{"path":"\/documentation\/neuron\/rmsprop\/callasfunction(_:)","title":"func callAsFunction([Tensor]) -> [Tensor]","type":"method"},{"path":"\/documentation\/neuron\/rmsprop\/clip(layer:)","title":"func clip(layer: Layer)","type":"method"},{"path":"\/documentation\/neuron\/rmsprop\/fit(_:labels:lossfunction:validation:requiresgradients:)","title":"func fit([Tensor], labels: [Tensor], lossFunction: LossFunction, validation: Bool, requiresGradients: Bool) -> Self.Output","type":"method"},{"path":"\/documentation\/neuron\/rmsprop\/predict(_:)","title":"func predict([Tensor]) -> [Tensor]","type":"method"},{"path":"\/documentation\/neuron\/rmsprop\/zerogradients()","title":"func zeroGradients()","type":"method"}],"path":"\/documentation\/neuron\/rmsprop\/optimizer-implementations","title":"Optimizer Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/rmsprop","title":"RMSProp","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/relu\/init(from:)","title":"convenience init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/neuron\/relu\/init(inputsize:)","title":"init(inputSize: TensorSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/relu\/biasenabled","title":"var biasEnabled: Bool","type":"property"},{"path":"\/documentation\/neuron\/relu\/biases","title":"var biases: Tensor","type":"property"},{"path":"\/documentation\/neuron\/relu\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/relu\/encodingtype","title":"var encodingType: EncodingType","type":"property"},{"path":"\/documentation\/neuron\/relu\/initializer","title":"var initializer: Initializer?","type":"property"},{"path":"\/documentation\/neuron\/relu\/inputsize","title":"var inputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/relu\/outputsize","title":"var outputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/relu\/trainable","title":"var trainable: Bool","type":"property"},{"path":"\/documentation\/neuron\/relu\/type","title":"var type: Activation","type":"property"},{"path":"\/documentation\/neuron\/relu\/weights","title":"var weights: Tensor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/relu\/apply(gradients:)","title":"func apply(gradients: (weights: Tensor, biases: Tensor))","type":"method"},{"path":"\/documentation\/neuron\/relu\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/neuron\/relu\/forward(tensor:)","title":"func forward(tensor: Tensor) -> Tensor","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/relu\/extraencodables","title":"var extraEncodables: [String : Codable]?","type":"property"}],"path":"\/documentation\/neuron\/relu\/layer-implementations","title":"Layer Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/relu","title":"ReLu","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/reshape\/init(from:)","title":"convenience init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/neuron\/reshape\/init(to:inputsize:)","title":"init(to: TensorSize, inputSize: TensorSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/reshape\/biasenabled","title":"var biasEnabled: Bool","type":"property"},{"path":"\/documentation\/neuron\/reshape\/biases","title":"var biases: Tensor","type":"property"},{"path":"\/documentation\/neuron\/reshape\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/reshape\/encodingtype","title":"var encodingType: EncodingType","type":"property"},{"path":"\/documentation\/neuron\/reshape\/initializer","title":"var initializer: Initializer?","type":"property"},{"path":"\/documentation\/neuron\/reshape\/inputsize","title":"var inputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/reshape\/outputsize","title":"var outputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/reshape\/trainable","title":"var trainable: Bool","type":"property"},{"path":"\/documentation\/neuron\/reshape\/weights","title":"var weights: Tensor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/reshape\/apply(gradients:)","title":"func apply(gradients: (weights: Tensor, biases: Tensor))","type":"method"},{"path":"\/documentation\/neuron\/reshape\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/neuron\/reshape\/forward(tensor:)","title":"func forward(tensor: Tensor) -> Tensor","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/reshape\/extraencodables","title":"var extraEncodables: [String : Codable]?","type":"property"}],"path":"\/documentation\/neuron\/reshape\/layer-implementations","title":"Layer Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/reshape","title":"Reshape","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/sgd\/init(_:device:learningrate:momentum:l2normalize:)","title":"init(Trainable, device: Device, learningRate: Float, momentum: Float, l2Normalize: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/sgd\/clip","title":"var clip: Float?","type":"property"},{"path":"\/documentation\/neuron\/sgd\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/sgd\/gradientaccumulator","title":"let gradientAccumulator: GradientAccumulator","type":"property"},{"path":"\/documentation\/neuron\/sgd\/istraining","title":"var isTraining: Bool","type":"property"},{"path":"\/documentation\/neuron\/sgd\/l2normalize","title":"var l2Normalize: Bool","type":"property"},{"path":"\/documentation\/neuron\/sgd\/learningrate","title":"let learningRate: Float","type":"property"},{"path":"\/documentation\/neuron\/sgd\/metricsreporter","title":"var metricsReporter: MetricsReporter?","type":"property"},{"path":"\/documentation\/neuron\/sgd\/trainable","title":"var trainable: Trainable","type":"property"},{"path":"\/documentation\/neuron\/sgd\/workers","title":"var workers: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/sgd\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/neuron\/sgd\/step()","title":"func step()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/sgd\/apply(_:)","title":"func apply(Tensor.Gradient)","type":"method"},{"path":"\/documentation\/neuron\/sgd\/callasfunction(_:)","title":"func callAsFunction([Tensor]) -> [Tensor]","type":"method"},{"path":"\/documentation\/neuron\/sgd\/clip(layer:)","title":"func clip(layer: Layer)","type":"method"},{"path":"\/documentation\/neuron\/sgd\/fit(_:labels:lossfunction:validation:requiresgradients:)","title":"func fit([Tensor], labels: [Tensor], lossFunction: LossFunction, validation: Bool, requiresGradients: Bool) -> Self.Output","type":"method"},{"path":"\/documentation\/neuron\/sgd\/predict(_:)","title":"func predict([Tensor]) -> [Tensor]","type":"method"},{"path":"\/documentation\/neuron\/sgd\/zerogradients()","title":"func zeroGradients()","type":"method"}],"path":"\/documentation\/neuron\/sgd\/optimizer-implementations","title":"Optimizer Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/sgd","title":"SGD","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/sequential\/init(_:)","title":"init(() -> [Layer])","type":"init"},{"path":"\/documentation\/neuron\/sequential\/init(from:)","title":"convenience init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/sequential\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/sequential\/iscompiled","title":"var isCompiled: Bool","type":"property"},{"path":"\/documentation\/neuron\/sequential\/layers","title":"var layers: [Layer]","type":"property"},{"path":"\/documentation\/neuron\/sequential\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/neuron\/sequential\/trainable","title":"var trainable: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/sequential\/callasfunction(_:)","title":"func callAsFunction(Tensor) -> Tensor","type":"method"},{"path":"\/documentation\/neuron\/sequential\/compile()","title":"func compile()","type":"method"},{"path":"\/documentation\/neuron\/sequential\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/neuron\/sequential\/predict(_:)","title":"func predict(Tensor) -> Tensor","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/sequential\/import(_:)","title":"static func `import`(URL) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/sequential\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/neuron\/sequential\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/sequential","title":"Sequential","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/sigmoid\/init(from:)","title":"convenience init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/neuron\/sigmoid\/init(inputsize:)","title":"init(inputSize: TensorSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/sigmoid\/biasenabled","title":"var biasEnabled: Bool","type":"property"},{"path":"\/documentation\/neuron\/sigmoid\/biases","title":"var biases: Tensor","type":"property"},{"path":"\/documentation\/neuron\/sigmoid\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/sigmoid\/encodingtype","title":"var encodingType: EncodingType","type":"property"},{"path":"\/documentation\/neuron\/sigmoid\/initializer","title":"var initializer: Initializer?","type":"property"},{"path":"\/documentation\/neuron\/sigmoid\/inputsize","title":"var inputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/sigmoid\/outputsize","title":"var outputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/sigmoid\/trainable","title":"var trainable: Bool","type":"property"},{"path":"\/documentation\/neuron\/sigmoid\/type","title":"var type: Activation","type":"property"},{"path":"\/documentation\/neuron\/sigmoid\/weights","title":"var weights: Tensor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/sigmoid\/apply(gradients:)","title":"func apply(gradients: (weights: Tensor, biases: Tensor))","type":"method"},{"path":"\/documentation\/neuron\/sigmoid\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/neuron\/sigmoid\/forward(tensor:)","title":"func forward(tensor: Tensor) -> Tensor","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/sigmoid\/extraencodables","title":"var extraEncodables: [String : Codable]?","type":"property"}],"path":"\/documentation\/neuron\/sigmoid\/layer-implementations","title":"Layer Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/sigmoid","title":"Sigmoid","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/softmax\/init(from:)","title":"convenience init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/neuron\/softmax\/init(inputsize:)","title":"init(inputSize: TensorSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/softmax\/biasenabled","title":"var biasEnabled: Bool","type":"property"},{"path":"\/documentation\/neuron\/softmax\/biases","title":"var biases: Tensor","type":"property"},{"path":"\/documentation\/neuron\/softmax\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/softmax\/encodingtype","title":"var encodingType: EncodingType","type":"property"},{"path":"\/documentation\/neuron\/softmax\/initializer","title":"var initializer: Initializer?","type":"property"},{"path":"\/documentation\/neuron\/softmax\/inputsize","title":"var inputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/softmax\/outputsize","title":"var outputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/softmax\/trainable","title":"var trainable: Bool","type":"property"},{"path":"\/documentation\/neuron\/softmax\/type","title":"var type: Activation","type":"property"},{"path":"\/documentation\/neuron\/softmax\/weights","title":"var weights: Tensor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/softmax\/apply(gradients:)","title":"func apply(gradients: (weights: Tensor, biases: Tensor))","type":"method"},{"path":"\/documentation\/neuron\/softmax\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/neuron\/softmax\/forward(tensor:)","title":"func forward(tensor: Tensor) -> Tensor","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/softmax\/extraencodables","title":"var extraEncodables: [String : Codable]?","type":"property"}],"path":"\/documentation\/neuron\/softmax\/layer-implementations","title":"Layer Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/softmax","title":"Softmax","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/swish\/init(from:)","title":"convenience init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/neuron\/swish\/init(inputsize:)","title":"init(inputSize: TensorSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/swish\/biasenabled","title":"var biasEnabled: Bool","type":"property"},{"path":"\/documentation\/neuron\/swish\/biases","title":"var biases: Tensor","type":"property"},{"path":"\/documentation\/neuron\/swish\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/swish\/encodingtype","title":"var encodingType: EncodingType","type":"property"},{"path":"\/documentation\/neuron\/swish\/initializer","title":"var initializer: Initializer?","type":"property"},{"path":"\/documentation\/neuron\/swish\/inputsize","title":"var inputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/swish\/outputsize","title":"var outputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/swish\/trainable","title":"var trainable: Bool","type":"property"},{"path":"\/documentation\/neuron\/swish\/type","title":"var type: Activation","type":"property"},{"path":"\/documentation\/neuron\/swish\/weights","title":"var weights: Tensor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/swish\/apply(gradients:)","title":"func apply(gradients: (weights: Tensor, biases: Tensor))","type":"method"},{"path":"\/documentation\/neuron\/swish\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/neuron\/swish\/forward(tensor:)","title":"func forward(tensor: Tensor) -> Tensor","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/swish\/extraencodables","title":"var extraEncodables: [String : Codable]?","type":"property"}],"path":"\/documentation\/neuron\/swish\/layer-implementations","title":"Layer Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/swish","title":"Swish","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/tanh\/init(from:)","title":"convenience init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/neuron\/tanh\/init(inputsize:)","title":"init(inputSize: TensorSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/tanh\/biasenabled","title":"var biasEnabled: Bool","type":"property"},{"path":"\/documentation\/neuron\/tanh\/biases","title":"var biases: Tensor","type":"property"},{"path":"\/documentation\/neuron\/tanh\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/tanh\/encodingtype","title":"var encodingType: EncodingType","type":"property"},{"path":"\/documentation\/neuron\/tanh\/initializer","title":"var initializer: Initializer?","type":"property"},{"path":"\/documentation\/neuron\/tanh\/inputsize","title":"var inputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/tanh\/outputsize","title":"var outputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/tanh\/trainable","title":"var trainable: Bool","type":"property"},{"path":"\/documentation\/neuron\/tanh\/type","title":"var type: Activation","type":"property"},{"path":"\/documentation\/neuron\/tanh\/weights","title":"var weights: Tensor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/tanh\/apply(gradients:)","title":"func apply(gradients: (weights: Tensor, biases: Tensor))","type":"method"},{"path":"\/documentation\/neuron\/tanh\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/neuron\/tanh\/forward(tensor:)","title":"func forward(tensor: Tensor) -> Tensor","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/tanh\/extraencodables","title":"var extraEncodables: [String : Codable]?","type":"property"}],"path":"\/documentation\/neuron\/tanh\/layer-implementations","title":"Layer Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/tanh","title":"Tanh","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/neuron\/tensor\/gradient\/*(_:_:)-2tvzd","title":"static func * (Tensor.Gradient, Tensor.Gradient) -> Tensor.Gradient","type":"op"},{"path":"\/documentation\/neuron\/tensor\/gradient\/*(_:_:)-6xja8","title":"static func * (Tensor.Gradient, Tensor.Scalar) -> Tensor.Gradient","type":"op"},{"path":"\/documentation\/neuron\/tensor\/gradient\/+(_:_:)-64i3b","title":"static func + (Tensor.Gradient, Tensor.Scalar) -> Tensor.Gradient","type":"op"},{"path":"\/documentation\/neuron\/tensor\/gradient\/+(_:_:)-9177a","title":"static func + (Tensor.Gradient, Tensor.Gradient) -> Tensor.Gradient","type":"op"},{"path":"\/documentation\/neuron\/tensor\/gradient\/-(_:_:)-45u7q","title":"static func - (Tensor.Gradient, Tensor.Scalar) -> Tensor.Gradient","type":"op"},{"path":"\/documentation\/neuron\/tensor\/gradient\/-(_:_:)-f57f","title":"static func - (Tensor.Gradient, Tensor.Gradient) -> Tensor.Gradient","type":"op"},{"path":"\/documentation\/neuron\/tensor\/gradient\/\/(_:_:)-16adv","title":"static func \/ (Tensor.Gradient, Tensor.Scalar) -> Tensor.Gradient","type":"op"},{"path":"\/documentation\/neuron\/tensor\/gradient\/\/(_:_:)-tmi4","title":"static func \/ (Tensor.Gradient, Tensor.Gradient) -> Tensor.Gradient","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/tensor\/gradient\/init(input:weights:biases:)","title":"init(input: [Tensor], weights: [Tensor], biases: [Tensor])","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/tensor\/gradient\/applymultiple(lhs:rhs:block:)","title":"static func applyMultiple(lhs: Tensor.Gradient, rhs: Tensor.Gradient, block: ([Tensor], [Tensor]) -> [Tensor]) -> Tensor.Gradient","type":"method"},{"path":"\/documentation\/neuron\/tensor\/gradient\/applyscalar(lhs:rhs:block:)","title":"static func applyScalar(lhs: Tensor.Gradient, rhs: Tensor.Scalar, block: ([Tensor], Tensor.Scalar) -> [Tensor]) -> Tensor.Gradient","type":"method"}],"path":"\/documentation\/neuron\/tensor\/gradient","title":"Tensor.Gradient","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/neuron\/tensor\/*(_:_:)-5za8i","title":"static func * (Tensor, Tensor.Scalar) -> Tensor","type":"op"},{"path":"\/documentation\/neuron\/tensor\/*(_:_:)-o67k","title":"static func * (Tensor, Tensor) -> Tensor","type":"op"},{"path":"\/documentation\/neuron\/tensor\/+(_:_:)-54a4i","title":"static func + (Tensor, Tensor) -> Tensor","type":"op"},{"path":"\/documentation\/neuron\/tensor\/+(_:_:)-mb3b","title":"static func + (Tensor, Tensor.Scalar) -> Tensor","type":"op"},{"path":"\/documentation\/neuron\/tensor\/-(_:_:)-66xu0","title":"static func - (Tensor, Tensor.Scalar) -> Tensor","type":"op"},{"path":"\/documentation\/neuron\/tensor\/-(_:_:)-9gjhj","title":"static func - (Tensor, Tensor) -> Tensor","type":"op"},{"path":"\/documentation\/neuron\/tensor\/\/(_:_:)-1vnuf","title":"static func \/ (Tensor, Tensor.Scalar) -> Tensor","type":"op"},{"path":"\/documentation\/neuron\/tensor\/\/(_:_:)-5w44r","title":"static func \/ (Tensor, Tensor) -> Tensor","type":"op"},{"path":"\/documentation\/neuron\/tensor\/==(_:_:)","title":"static func == (Tensor, Tensor) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/tensor\/init()","title":"init()","type":"init"},{"path":"\/documentation\/neuron\/tensor\/init(_:context:)-26bbk","title":"init(Tensor.Scalar?, context: TensorContext)","type":"init"},{"path":"\/documentation\/neuron\/tensor\/init(_:context:)-444gx","title":"init([[Tensor.Scalar]], context: TensorContext)","type":"init"},{"path":"\/documentation\/neuron\/tensor\/init(_:context:)-8l3hb","title":"init([Tensor.Scalar], context: TensorContext)","type":"init"},{"path":"\/documentation\/neuron\/tensor\/init(_:context:)-8mx99","title":"init(Tensor.Data, context: TensorContext)","type":"init"},{"path":"\/documentation\/neuron\/tensor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/tensor\/id","title":"var id: UUID","type":"property"},{"path":"\/documentation\/neuron\/tensor\/input","title":"var input: Tensor","type":"property"},{"path":"\/documentation\/neuron\/tensor\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/neuron\/tensor\/label","title":"var label: String","type":"property"},{"path":"\/documentation\/neuron\/tensor\/shape","title":"var shape: [Int]","type":"property"},{"path":"\/documentation\/neuron\/tensor\/value","title":"var value: Tensor.Data","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/tensor\/apply(axis:_:)","title":"func apply(axis: Int, ([[Tensor.Scalar]]) -> Tensor.Scalar) -> Tensor","type":"method"},{"path":"\/documentation\/neuron\/tensor\/asscalar()","title":"func asScalar() -> Tensor.Scalar","type":"method"},{"path":"\/documentation\/neuron\/tensor\/clip(_:)","title":"func clip(Tensor.Scalar)","type":"method"},{"path":"\/documentation\/neuron\/tensor\/detached()","title":"func detached() -> Tensor","type":"method"},{"path":"\/documentation\/neuron\/tensor\/gradients(delta:)","title":"func gradients(delta: Tensor) -> Tensor.Gradient","type":"method"},{"path":"\/documentation\/neuron\/tensor\/isvalueequal(to:)","title":"func isValueEqual(to: Tensor) -> Bool","type":"method"},{"path":"\/documentation\/neuron\/tensor\/l2normalize()","title":"func l2Normalize()","type":"method"},{"path":"\/documentation\/neuron\/tensor\/norm(axis:)","title":"func norm(axis: Int) -> Tensor","type":"method"},{"path":"\/documentation\/neuron\/tensor\/printgraph()","title":"func printGraph()","type":"method"},{"path":"\/documentation\/neuron\/tensor\/setgraph(_:)","title":"func setGraph(Tensor) -> Tensor","type":"method"},{"path":"\/documentation\/neuron\/tensor\/sum()","title":"func sum() -> Tensor.Scalar","type":"method"},{"path":"\/documentation\/neuron\/tensor\/sum(axis:)","title":"func sum(axis: Int) -> Tensor","type":"method"},{"path":"\/documentation\/neuron\/tensor\/sumofsquares(axis:)","title":"func sumOfSquares(axis: Int) -> Tensor","type":"method"},{"path":"\/documentation\/neuron\/tensor\/testlarge(limit:)","title":"func testLarge(limit: Tensor.Scalar)","type":"method"},{"path":"\/documentation\/neuron\/tensor\/testnan()","title":"func testNaN()","type":"method"},{"path":"\/documentation\/neuron\/tensor\/zeroslike()","title":"func zerosLike() -> Tensor","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/neuron\/tensor\/data","title":"Tensor.Data","type":"typealias"},{"path":"\/documentation\/neuron\/tensor\/mathblock","title":"Tensor.MathBlock","type":"typealias"},{"path":"\/documentation\/neuron\/tensor\/scalar","title":"Tensor.Scalar","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/tensor\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/neuron\/tensor\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/neuron\/tensor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/neuron\/tensor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/tensor","title":"Tensor","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/transconv2d\/encodingtype","title":"var encodingType: EncodingType","type":"property"},{"path":"\/documentation\/neuron\/transconv2d\/outputsize","title":"var outputSize: TensorSize","type":"property"}],"path":"\/documentation\/neuron\/transconv2d","title":"TransConv2d","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/wgan\/fakelabel","title":"var fakeLabel: Tensor.Scalar","type":"property"},{"path":"\/documentation\/neuron\/wgan\/lossfunction","title":"var lossFunction: LossFunction","type":"property"},{"path":"\/documentation\/neuron\/wgan\/reallabel","title":"var realLabel: Tensor.Scalar","type":"property"}],"path":"\/documentation\/neuron\/wgan","title":"WGAN","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/wgangp\/fakelabel","title":"var fakeLabel: Tensor.Scalar","type":"property"},{"path":"\/documentation\/neuron\/wgangp\/lambda","title":"var lambda: Tensor.Scalar","type":"property"},{"path":"\/documentation\/neuron\/wgangp\/lossfunction","title":"var lossFunction: LossFunction","type":"property"},{"path":"\/documentation\/neuron\/wgangp\/reallabel","title":"var realLabel: Tensor.Scalar","type":"property"}],"path":"\/documentation\/neuron\/wgangp","title":"WGANGP","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/activationlayer\/type","title":"var type: Activation","type":"property"}],"path":"\/documentation\/neuron\/activationlayer","title":"ActivationLayer","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/convolutionallayer\/filtercount","title":"var filterCount: Int","type":"property"},{"path":"\/documentation\/neuron\/convolutionallayer\/filtersize","title":"var filterSize: (rows: Int, columns: Int)","type":"property"},{"path":"\/documentation\/neuron\/convolutionallayer\/filters","title":"var filters: [Tensor]","type":"property"},{"path":"\/documentation\/neuron\/convolutionallayer\/padding","title":"var padding: NumSwift.ConvPadding","type":"property"},{"path":"\/documentation\/neuron\/convolutionallayer\/strides","title":"var strides: (rows: Int, columns: Int)","type":"property"}],"path":"\/documentation\/neuron\/convolutionallayer","title":"ConvolutionalLayer","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/dataset\/complete","title":"var complete: Bool","type":"property"},{"path":"\/documentation\/neuron\/dataset\/data","title":"var data: DatasetData","type":"property"},{"path":"\/documentation\/neuron\/dataset\/datapassthroughsubject","title":"var dataPassthroughSubject: PassthroughSubject<DatasetData, Never>","type":"property"},{"children":[{"children":[{"path":"\/documentation\/neuron\/dataset\/datapublisher-3hps4","title":"var dataPublisher: AnyPublisher<DatasetData, Never>","type":"property"}],"title":"Dataset Implementations","type":"groupMarker"}],"path":"\/documentation\/neuron\/dataset\/datapublisher-77dvp","title":"var dataPublisher: AnyPublisher<DatasetData, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/neuron\/dataset\/bitmap(path:offset:)-80dj4","title":"func bitmap(path: String, offset: Int) -> [UInt8]","type":"method"}],"title":"Dataset Implementations","type":"groupMarker"}],"path":"\/documentation\/neuron\/dataset\/bitmap(path:offset:)-32v1z","title":"func bitmap(path: String, offset: Int) -> [UInt8]","type":"method"},{"path":"\/documentation\/neuron\/dataset\/build()-2jua9","title":"func build() async -> DatasetData","type":"method"},{"path":"\/documentation\/neuron\/dataset\/build()-5j0ah","title":"func build()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/neuron\/dataset\/format(data:offset:)-6hwe5","title":"func format(data: Data, offset: Int) -> [UInt8]","type":"method"}],"title":"Dataset Implementations","type":"groupMarker"}],"path":"\/documentation\/neuron\/dataset\/format(data:offset:)-1bqn3","title":"func format(data: Data, offset: Int) -> [UInt8]","type":"method"},{"children":[{"children":[{"path":"\/documentation\/neuron\/dataset\/read(data:offset:scaleby:)-d1dn","title":"func read<T>(data: Data, offset: Int, scaleBy: T) -> [T]","type":"method"}],"title":"Dataset Implementations","type":"groupMarker"}],"path":"\/documentation\/neuron\/dataset\/read(data:offset:scaleby:)-380wb","title":"func read<T>(data: Data, offset: Int, scaleBy: T) -> [T]","type":"method"},{"children":[{"children":[{"path":"\/documentation\/neuron\/dataset\/read(path:offset:scaleby:)-mn9","title":"func read<T>(path: String, offset: Int, scaleBy: T) -> [T]","type":"method"}],"title":"Dataset Implementations","type":"groupMarker"}],"path":"\/documentation\/neuron\/dataset\/read(path:offset:scaleby:)-6komg","title":"func read<T>(path: String, offset: Int, scaleBy: T) -> [T]","type":"method"}],"path":"\/documentation\/neuron\/dataset","title":"Dataset","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/device\/qospriority","title":"var qosPriority: DispatchQoS.QoSClass","type":"property"},{"path":"\/documentation\/neuron\/device\/type","title":"var type: DeviceType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/device\/activate(_:_:)","title":"func activate(Tensor, Activation) -> Tensor","type":"method"},{"path":"\/documentation\/neuron\/device\/conv2d(signal:filter:strides:padding:filtersize:inputsize:outputsize:)","title":"func conv2d(signal: [[Tensor.Scalar]], filter: [[Tensor.Scalar]], strides: (Int, Int), padding: NumSwift.ConvPadding, filterSize: (rows: Int, columns: Int), inputSize: (rows: Int, columns: Int), outputSize: (rows: Int, columns: Int)?) -> [[Tensor.Scalar]]","type":"method"},{"path":"\/documentation\/neuron\/device\/derivate(_:_:)","title":"func derivate(Tensor, Activation) -> Tensor","type":"method"},{"path":"\/documentation\/neuron\/device\/matrixmultiply(_:_:columns:rows:)","title":"func matrixMultiply(Tensor, Tensor, columns: Int, rows: Int) -> Tensor","type":"method"},{"path":"\/documentation\/neuron\/device\/transconv2d(signal:filter:strides:padding:filtersize:inputsize:outputsize:)","title":"func transConv2d(signal: [[Tensor.Scalar]], filter: [[Tensor.Scalar]], strides: (Int, Int), padding: NumSwift.ConvPadding, filterSize: (rows: Int, columns: Int), inputSize: (rows: Int, columns: Int), outputSize: (rows: Int, columns: Int)?) -> [[Tensor.Scalar]]","type":"method"}],"path":"\/documentation\/neuron\/device","title":"Device","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/layer\/biasenabled","title":"var biasEnabled: Bool","type":"property"},{"path":"\/documentation\/neuron\/layer\/biases","title":"var biases: Tensor","type":"property"},{"path":"\/documentation\/neuron\/layer\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/layer\/encodingtype","title":"var encodingType: EncodingType","type":"property"},{"children":[{"children":[{"path":"\/documentation\/neuron\/layer\/extraencodables-f7zv","title":"var extraEncodables: [String : Codable]?","type":"property"}],"title":"Layer Implementations","type":"groupMarker"}],"path":"\/documentation\/neuron\/layer\/extraencodables-u8eh","title":"var extraEncodables: [String : Codable]?","type":"property"},{"path":"\/documentation\/neuron\/layer\/initializer","title":"var initializer: Initializer?","type":"property"},{"path":"\/documentation\/neuron\/layer\/inputsize","title":"var inputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/layer\/outputsize","title":"var outputSize: TensorSize","type":"property"},{"path":"\/documentation\/neuron\/layer\/trainable","title":"var trainable: Bool","type":"property"},{"path":"\/documentation\/neuron\/layer\/weights","title":"var weights: Tensor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/layer\/apply(gradients:)","title":"func apply(gradients: (weights: Tensor, biases: Tensor))","type":"method"},{"path":"\/documentation\/neuron\/layer\/forward(tensor:)","title":"func forward(tensor: Tensor) -> Tensor","type":"method"}],"path":"\/documentation\/neuron\/layer","title":"Layer","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/metriclogger\/lock","title":"var lock: NSLock","type":"property"},{"path":"\/documentation\/neuron\/metriclogger\/metrics","title":"var metrics: [Metric : Float]","type":"property"},{"path":"\/documentation\/neuron\/metriclogger\/metricstogather","title":"var metricsToGather: Set<Metric>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/neuron\/metriclogger\/addmetric(value:key:)-9r02w","title":"func addMetric(value: Float, key: Metric)","type":"method"}],"title":"MetricLogger Implementations","type":"groupMarker"}],"path":"\/documentation\/neuron\/metriclogger\/addmetric(value:key:)-980d7","title":"func addMetric(value: Float, key: Metric)","type":"method"}],"path":"\/documentation\/neuron\/metriclogger","title":"MetricLogger","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/optimizer\/clip","title":"var clip: Float?","type":"property"},{"path":"\/documentation\/neuron\/optimizer\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/optimizer\/gradientaccumulator","title":"var gradientAccumulator: GradientAccumulator","type":"property"},{"path":"\/documentation\/neuron\/optimizer\/istraining","title":"var isTraining: Bool","type":"property"},{"path":"\/documentation\/neuron\/optimizer\/l2normalize","title":"var l2Normalize: Bool","type":"property"},{"path":"\/documentation\/neuron\/optimizer\/learningrate","title":"var learningRate: Float","type":"property"},{"path":"\/documentation\/neuron\/optimizer\/metricsreporter","title":"var metricsReporter: MetricsReporter?","type":"property"},{"path":"\/documentation\/neuron\/optimizer\/trainable","title":"var trainable: Trainable","type":"property"},{"path":"\/documentation\/neuron\/optimizer\/workers","title":"var workers: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/neuron\/optimizer\/apply(_:)-8ckz5","title":"func apply(Tensor.Gradient)","type":"method"}],"title":"Optimizer Implementations","type":"groupMarker"}],"path":"\/documentation\/neuron\/optimizer\/apply(_:)-8info","title":"func apply(Tensor.Gradient)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/neuron\/optimizer\/callasfunction(_:)-9f5jq","title":"func callAsFunction([Tensor]) -> [Tensor]","type":"method"}],"title":"Optimizer Implementations","type":"groupMarker"}],"path":"\/documentation\/neuron\/optimizer\/callasfunction(_:)-92h0h","title":"func callAsFunction([Tensor]) -> [Tensor]","type":"method"},{"path":"\/documentation\/neuron\/optimizer\/clip(layer:)","title":"func clip(layer: Layer)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/neuron\/optimizer\/fit(_:labels:lossfunction:validation:requiresgradients:)-3ekph","title":"func fit([Tensor], labels: [Tensor], lossFunction: LossFunction, validation: Bool, requiresGradients: Bool) -> Self.Output","type":"method"}],"title":"Optimizer Implementations","type":"groupMarker"}],"path":"\/documentation\/neuron\/optimizer\/fit(_:labels:lossfunction:validation:requiresgradients:)-158q6","title":"func fit([Tensor], labels: [Tensor], lossFunction: LossFunction, validation: Bool, requiresGradients: Bool) -> Self.Output","type":"method"},{"children":[{"children":[{"path":"\/documentation\/neuron\/optimizer\/predict(_:)-5vc1c","title":"func predict([Tensor]) -> [Tensor]","type":"method"}],"title":"Optimizer Implementations","type":"groupMarker"}],"path":"\/documentation\/neuron\/optimizer\/predict(_:)-5sb30","title":"func predict([Tensor]) -> [Tensor]","type":"method"},{"path":"\/documentation\/neuron\/optimizer\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/neuron\/optimizer\/step()","title":"func step()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/neuron\/optimizer\/zerogradients()-2hpmy","title":"func zeroGradients()","type":"method"}],"title":"Optimizer Implementations","type":"groupMarker"}],"path":"\/documentation\/neuron\/optimizer\/zerogradients()-9o95f","title":"func zeroGradients()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/neuron\/optimizer\/gradient","title":"Optimizer.Gradient","type":"typealias"},{"path":"\/documentation\/neuron\/optimizer\/output","title":"Optimizer.Output","type":"typealias"}],"path":"\/documentation\/neuron\/optimizer","title":"Optimizer","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/trainable\/device","title":"var device: Device","type":"property"},{"path":"\/documentation\/neuron\/trainable\/iscompiled","title":"var isCompiled: Bool","type":"property"},{"path":"\/documentation\/neuron\/trainable\/layers","title":"var layers: [Layer]","type":"property"},{"path":"\/documentation\/neuron\/trainable\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/neuron\/trainable\/trainable","title":"var trainable: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/trainable\/compile()","title":"func compile()","type":"method"},{"path":"\/documentation\/neuron\/trainable\/predict(_:)","title":"func predict(Tensor) -> Tensor","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/trainable\/import(_:)","title":"static func `import`(URL) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/trainable\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/neuron\/trainable\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/trainable","title":"Trainable","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/atomic\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/neuron\/atomic\/init(wrappedvalue:)","title":"init(wrappedValue: Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/atomic\/wrappedvalue","title":"var wrappedValue: Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/atomic\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/neuron\/atomic","title":"Atomic","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/cpu\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/cpu\/qospriority","title":"var qosPriority: DispatchQoS.QoSClass","type":"property"},{"path":"\/documentation\/neuron\/cpu\/type","title":"var type: DeviceType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/cpu\/activate(_:_:)","title":"func activate(Tensor, Activation) -> Tensor","type":"method"},{"path":"\/documentation\/neuron\/cpu\/conv2d(signal:filter:strides:padding:filtersize:inputsize:outputsize:)","title":"func conv2d(signal: [[Tensor.Scalar]], filter: [[Tensor.Scalar]], strides: (Int, Int), padding: NumSwift.ConvPadding, filterSize: (rows: Int, columns: Int), inputSize: (rows: Int, columns: Int), outputSize: (rows: Int, columns: Int)?) -> [[Tensor.Scalar]]","type":"method"},{"path":"\/documentation\/neuron\/cpu\/derivate(_:_:)","title":"func derivate(Tensor, Activation) -> Tensor","type":"method"},{"path":"\/documentation\/neuron\/cpu\/matrixmultiply(_:_:columns:rows:)","title":"func matrixMultiply(Tensor, Tensor, columns: Int, rows: Int) -> Tensor","type":"method"},{"path":"\/documentation\/neuron\/cpu\/transconv2d(signal:filter:strides:padding:filtersize:inputsize:outputsize:)","title":"func transConv2d(signal: [[Tensor.Scalar]], filter: [[Tensor.Scalar]], strides: (Int, Int), padding: NumSwift.ConvPadding, filterSize: (rows: Int, columns: Int), inputSize: (rows: Int, columns: Int), outputSize: (rows: Int, columns: Int)?) -> [[Tensor.Scalar]]","type":"method"}],"path":"\/documentation\/neuron\/cpu","title":"CPU","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/datasetmodel\/init(data:label:)","title":"init(data: Tensor, label: Tensor)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/datasetmodel\/data","title":"var data: Tensor","type":"property"},{"path":"\/documentation\/neuron\/datasetmodel\/label","title":"var label: Tensor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/neuron\/datasetmodel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/neuron\/datasetmodel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/datasetmodel","title":"DatasetModel","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/exporthelper\/getcsv(filename:_:)","title":"static func getCSV<T>(filename: String, [T]) -> URL?","type":"method"},{"path":"\/documentation\/neuron\/exporthelper\/getmodel(filename:model:)","title":"static func getModel<T>(filename: String, model: T) -> URL?","type":"method"}],"path":"\/documentation\/neuron\/exporthelper","title":"ExportHelper","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/initializer\/init(type:)","title":"init(type: InitializerType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/initializer\/type","title":"let type: InitializerType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/initializer\/calculate(input:out:)","title":"func calculate(input: Int, out: Int) -> Float","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/neuron\/initializer\/codingkeys\/henormal","title":"case heNormal","type":"case"},{"path":"\/documentation\/neuron\/initializer\/codingkeys\/heuniform","title":"case heUniform","type":"case"},{"path":"\/documentation\/neuron\/initializer\/codingkeys\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/neuron\/initializer\/codingkeys\/xaviernormal","title":"case xavierNormal","type":"case"},{"path":"\/documentation\/neuron\/initializer\/codingkeys\/xavieruniform","title":"case xavierUniform","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/initializer\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/neuron\/initializer\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/neuron\/initializer\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/initializer\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/neuron\/initializer\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/neuron\/initializer\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/neuron\/initializer\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/neuron\/initializer\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/initializer\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/initializer\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/neuron\/initializer\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/initializer\/codingkeys","title":"Initializer.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/initializer\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/neuron\/initializer\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/initializer\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/neuron\/initializer\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/initializer","title":"Initializer","type":"struct"},{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/neuron\/layermodelconverter\/codingkeys\/layer","title":"case layer","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/layermodelconverter\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/neuron\/layermodelconverter\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/neuron\/layermodelconverter\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/layermodelconverter\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/neuron\/layermodelconverter\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/neuron\/layermodelconverter\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/neuron\/layermodelconverter\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/neuron\/layermodelconverter\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/layermodelconverter\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/layermodelconverter\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/neuron\/layermodelconverter\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/layermodelconverter\/codingkeys","title":"LayerModelConverter.CodingKeys","type":"enum"}],"path":"\/documentation\/neuron\/layermodelconverter","title":"LayerModelConverter","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/normaldistribution\/init(randomsource:mean:deviation:)","title":"init(randomSource: GKRandomSource, mean: Float, deviation: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/normaldistribution\/deviation","title":"let deviation: Float","type":"property"},{"path":"\/documentation\/neuron\/normaldistribution\/mean","title":"let mean: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/normaldistribution\/nextfloat()","title":"func nextFloat() -> Float","type":"method"}],"path":"\/documentation\/neuron\/normaldistribution","title":"NormalDistribution","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/tensorcontext\/init(backpropagate:)","title":"init(backpropagate: TensorContext.TensorContextFunction?)","type":"init"},{"path":"\/documentation\/neuron\/tensorcontext\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/tensorcontext\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/neuron\/tensorcontext\/tensorbackpropresult","title":"TensorContext.TensorBackpropResult","type":"typealias"},{"path":"\/documentation\/neuron\/tensorcontext\/tensorcontextfunction","title":"TensorContext.TensorContextFunction","type":"typealias"}],"path":"\/documentation\/neuron\/tensorcontext","title":"TensorContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/tensorsize\/init(array:)","title":"init(array: [Int])","type":"init"},{"path":"\/documentation\/neuron\/tensorsize\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/neuron\/tensorsize\/init(rows:columns:depth:)","title":"init(rows: Int, columns: Int, depth: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/tensorsize\/columns","title":"let columns: Int","type":"property"},{"path":"\/documentation\/neuron\/tensorsize\/depth","title":"let depth: Int","type":"property"},{"path":"\/documentation\/neuron\/tensorsize\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/neuron\/tensorsize\/rows","title":"let rows: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/neuron\/tensorsize\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/neuron\/tensorsize\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/tensorsize","title":"TensorSize","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/neuron\/datatype","title":"DataType","type":"typealias"},{"path":"\/documentation\/neuron\/datasetdata","title":"DatasetData","type":"typealias"},{"path":"\/documentation\/neuron\/resulttype","title":"ResultType","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/neuron\/activation\/leakyrelu(limit:)","title":"case leakyRelu(limit: Float)","type":"case"},{"path":"\/documentation\/neuron\/activation\/none","title":"case none","type":"case"},{"path":"\/documentation\/neuron\/activation\/relu","title":"case reLu","type":"case"},{"path":"\/documentation\/neuron\/activation\/sigmoid","title":"case sigmoid","type":"case"},{"path":"\/documentation\/neuron\/activation\/softmax","title":"case softmax","type":"case"},{"path":"\/documentation\/neuron\/activation\/swish","title":"case swish","type":"case"},{"path":"\/documentation\/neuron\/activation\/tanh","title":"case tanh","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/activation\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/activation\/activate(input:)","title":"func activate(input: Float) -> Float","type":"method"},{"path":"\/documentation\/neuron\/activation\/asstring()","title":"func asString() -> String","type":"method"},{"path":"\/documentation\/neuron\/activation\/derivative(input:)","title":"func derivative(input: Float) -> Float","type":"method"},{"path":"\/documentation\/neuron\/activation\/index()","title":"func index() -> Int","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/neuron\/activation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/neuron\/activation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/activation","title":"Activation","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/neuron\/devicetype\/cpu","title":"case cpu","type":"case"},{"path":"\/documentation\/neuron\/devicetype\/gpu","title":"case gpu","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/devicetype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/neuron\/devicetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/neuron\/devicetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/devicetype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/devicetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/devicetype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/neuron\/devicetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/neuron\/devicetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/devicetype","title":"DeviceType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/neuron\/encodingtype\/batchnormalize","title":"case batchNormalize","type":"case"},{"path":"\/documentation\/neuron\/encodingtype\/conv2d","title":"case conv2d","type":"case"},{"path":"\/documentation\/neuron\/encodingtype\/dense","title":"case dense","type":"case"},{"path":"\/documentation\/neuron\/encodingtype\/dropout","title":"case dropout","type":"case"},{"path":"\/documentation\/neuron\/encodingtype\/flatten","title":"case flatten","type":"case"},{"path":"\/documentation\/neuron\/encodingtype\/layernormalize","title":"case layerNormalize","type":"case"},{"path":"\/documentation\/neuron\/encodingtype\/leakyrelu","title":"case leakyRelu","type":"case"},{"path":"\/documentation\/neuron\/encodingtype\/maxpool","title":"case maxPool","type":"case"},{"path":"\/documentation\/neuron\/encodingtype\/relu","title":"case relu","type":"case"},{"path":"\/documentation\/neuron\/encodingtype\/reshape","title":"case reshape","type":"case"},{"path":"\/documentation\/neuron\/encodingtype\/sigmoid","title":"case sigmoid","type":"case"},{"path":"\/documentation\/neuron\/encodingtype\/softmax","title":"case softmax","type":"case"},{"path":"\/documentation\/neuron\/encodingtype\/swish","title":"case swish","type":"case"},{"path":"\/documentation\/neuron\/encodingtype\/tanh","title":"case tanh","type":"case"},{"path":"\/documentation\/neuron\/encodingtype\/transconv2d","title":"case transConv2d","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/encodingtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/neuron\/encodingtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/neuron\/encodingtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/encodingtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/encodingtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/encodingtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/neuron\/encodingtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/neuron\/encodingtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/encodingtype","title":"EncodingType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/neuron\/initializertype\/henormal","title":"case heNormal","type":"case"},{"path":"\/documentation\/neuron\/initializertype\/heuniform","title":"case heUniform","type":"case"},{"path":"\/documentation\/neuron\/initializertype\/normal(std:)","title":"case normal(std: Float)","type":"case"},{"path":"\/documentation\/neuron\/initializertype\/xaviernormal","title":"case xavierNormal","type":"case"},{"path":"\/documentation\/neuron\/initializertype\/xavieruniform","title":"case xavierUniform","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/initializertype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/initializertype\/build()","title":"func build() -> Initializer","type":"method"}],"path":"\/documentation\/neuron\/initializertype","title":"InitializerType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/neuron\/lossfunction\/binarycrossentropy","title":"case binaryCrossEntropy","type":"case"},{"path":"\/documentation\/neuron\/lossfunction\/crossentropy","title":"case crossEntropy","type":"case"},{"path":"\/documentation\/neuron\/lossfunction\/crossentropysoftmax","title":"case crossEntropySoftmax","type":"case"},{"path":"\/documentation\/neuron\/lossfunction\/meansquareerror","title":"case meanSquareError","type":"case"},{"path":"\/documentation\/neuron\/lossfunction\/minimaxbinarycrossentropy","title":"case minimaxBinaryCrossEntropy","type":"case"},{"path":"\/documentation\/neuron\/lossfunction\/wasserstein","title":"case wasserstein","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/lossfunction\/calculate(_:correct:)","title":"func calculate([Tensor.Scalar], correct: [Tensor.Scalar]) -> Tensor.Scalar","type":"method"},{"path":"\/documentation\/neuron\/lossfunction\/derivative(_:correct:)","title":"func derivative([Tensor.Scalar], correct: [Tensor.Scalar]) -> [Tensor.Scalar]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/neuron\/lossfunction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/neuron\/lossfunction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/lossfunction","title":"LossFunction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/neuron\/metric\/accuracy","title":"case accuracy","type":"case"},{"path":"\/documentation\/neuron\/metric\/criticloss","title":"case criticLoss","type":"case"},{"path":"\/documentation\/neuron\/metric\/fakeimageloss","title":"case fakeImageLoss","type":"case"},{"path":"\/documentation\/neuron\/metric\/generatorloss","title":"case generatorLoss","type":"case"},{"path":"\/documentation\/neuron\/metric\/gradientpenalty","title":"case gradientPenalty","type":"case"},{"path":"\/documentation\/neuron\/metric\/loss","title":"case loss","type":"case"},{"path":"\/documentation\/neuron\/metric\/realimageloss","title":"case realImageLoss","type":"case"},{"path":"\/documentation\/neuron\/metric\/valaccuracy","title":"case valAccuracy","type":"case"},{"path":"\/documentation\/neuron\/metric\/valloss","title":"case valLoss","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/metric\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/neuron\/metric\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/neuron\/metric\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/metric\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/metric\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/neuron\/metric\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/metric","title":"Metric","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/neuron\/quickdrawobject\/theeiffeltower","title":"case TheEiffelTower","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/thegreatwallofchina","title":"case TheGreatWallOfChina","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/themonalisa","title":"case TheMonaLisa","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/aircraftcarrier","title":"case aircraftCarrier","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/airplane","title":"case airplane","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/alarmclock","title":"case alarmClock","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/ambulance","title":"case ambulance","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/angel","title":"case angel","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/animalmigration","title":"case animalMigration","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/ant","title":"case ant","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/anvil","title":"case anvil","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/apple","title":"case apple","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/arm","title":"case arm","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/asparagus","title":"case asparagus","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/axe","title":"case axe","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/backpack","title":"case backpack","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/banana","title":"case banana","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/bandage","title":"case bandage","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/barn","title":"case barn","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/baseball","title":"case baseball","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/baseballbat","title":"case baseballBat","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/basket","title":"case basket","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/basketball","title":"case basketball","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/bat","title":"case bat","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/bathtub","title":"case bathtub","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/beach","title":"case beach","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/bear","title":"case bear","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/beard","title":"case beard","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/bed","title":"case bed","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/bee","title":"case bee","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/belt","title":"case belt","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/bench","title":"case bench","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/bicycle","title":"case bicycle","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/binoculars","title":"case binoculars","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/bird","title":"case bird","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/birthdaycake","title":"case birthdayCake","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/blackberry","title":"case blackberry","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/blueberry","title":"case blueberry","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/book","title":"case book","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/boomerang","title":"case boomerang","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/bottlecap","title":"case bottlecap","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/bowtie","title":"case bowtie","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/bracelet","title":"case bracelet","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/brain","title":"case brain","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/bread","title":"case bread","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/bridge","title":"case bridge","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/broccoli","title":"case broccoli","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/broom","title":"case broom","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/bucket","title":"case bucket","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/bulldozer","title":"case bulldozer","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/bus","title":"case bus","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/bush","title":"case bush","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/butterfly","title":"case butterfly","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/cactus","title":"case cactus","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/cake","title":"case cake","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/calculator","title":"case calculator","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/calendar","title":"case calendar","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/camel","title":"case camel","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/camera","title":"case camera","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/camouflage","title":"case camouflage","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/campfire","title":"case campfire","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/candle","title":"case candle","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/cannon","title":"case cannon","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/canoe","title":"case canoe","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/car","title":"case car","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/carrot","title":"case carrot","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/castle","title":"case castle","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/cat","title":"case cat","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/ceilingfan","title":"case ceilingFan","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/cellphone","title":"case cellPhone","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/cello","title":"case cello","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/chair","title":"case chair","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/chandelier","title":"case chandelier","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/church","title":"case church","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/circle","title":"case circle","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/clarinet","title":"case clarinet","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/clock","title":"case clock","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/cloud","title":"case cloud","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/coffeecup","title":"case coffeeCup","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/compass","title":"case compass","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/computer","title":"case computer","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/cookie","title":"case cookie","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/cooler","title":"case cooler","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/couch","title":"case couch","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/cow","title":"case cow","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/crab","title":"case crab","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/crayon","title":"case crayon","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/crocodile","title":"case crocodile","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/crown","title":"case crown","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/cruiseship","title":"case cruiseShip","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/cup","title":"case cup","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/diamond","title":"case diamond","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/dishwasher","title":"case dishwasher","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/divingboard","title":"case divingBoard","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/dog","title":"case dog","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/dolphin","title":"case dolphin","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/donut","title":"case donut","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/door","title":"case door","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/dragon","title":"case dragon","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/dresser","title":"case dresser","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/drill","title":"case drill","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/drums","title":"case drums","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/duck","title":"case duck","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/dumbbell","title":"case dumbbell","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/ear","title":"case ear","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/elbow","title":"case elbow","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/elephant","title":"case elephant","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/envelope","title":"case envelope","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/eraser","title":"case eraser","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/eye","title":"case eye","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/eyeglasses","title":"case eyeglasses","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/face","title":"case face","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/fan","title":"case fan","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/feather","title":"case feather","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/fence","title":"case fence","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/finger","title":"case finger","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/firehydrant","title":"case fireHydrant","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/fireplace","title":"case fireplace","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/firetruck","title":"case firetruck","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/fish","title":"case fish","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/flamingo","title":"case flamingo","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/flashlight","title":"case flashlight","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/flipflops","title":"case flipFlops","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/floorlamp","title":"case floorLamp","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/flower","title":"case flower","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/flyingsaucer","title":"case flyingSaucer","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/foot","title":"case foot","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/fork","title":"case fork","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/frog","title":"case frog","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/fryingpan","title":"case fryingPan","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/garden","title":"case garden","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/gardenhose","title":"case gardenHose","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/giraffe","title":"case giraffe","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/goatee","title":"case goatee","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/golfclub","title":"case golfClub","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/grapes","title":"case grapes","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/grass","title":"case grass","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/guitar","title":"case guitar","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/hamburger","title":"case hamburger","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/hammer","title":"case hammer","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/hand","title":"case hand","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/harp","title":"case harp","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/hat","title":"case hat","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/headphones","title":"case headphones","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/hedgehog","title":"case hedgehog","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/helicopter","title":"case helicopter","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/helmet","title":"case helmet","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/hexagon","title":"case hexagon","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/hockeypuck","title":"case hockeyPuck","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/hockeystick","title":"case hockeyStick","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/horse","title":"case horse","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/hospital","title":"case hospital","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/hotairballoon","title":"case hotAirBalloon","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/hotdog","title":"case hotDog","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/hottub","title":"case hotTub","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/hourglass","title":"case hourglass","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/house","title":"case house","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/houseplant","title":"case housePlant","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/hurricane","title":"case hurricane","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/icecream","title":"case iceCream","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/jacket","title":"case jacket","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/jail","title":"case jail","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/kangaroo","title":"case kangaroo","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/key","title":"case key","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/keyboard","title":"case keyboard","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/knee","title":"case knee","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/knife","title":"case knife","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/ladder","title":"case ladder","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/lantern","title":"case lantern","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/laptop","title":"case laptop","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/leaf","title":"case leaf","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/leg","title":"case leg","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/lightbulb","title":"case lightBulb","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/lighter","title":"case lighter","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/lighthouse","title":"case lighthouse","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/lightning","title":"case lightning","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/line","title":"case line","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/lion","title":"case lion","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/lipstick","title":"case lipstick","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/lobster","title":"case lobster","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/lollipop","title":"case lollipop","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/mailbox","title":"case mailbox","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/map","title":"case map","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/marker","title":"case marker","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/matches","title":"case matches","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/megaphone","title":"case megaphone","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/mermaid","title":"case mermaid","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/microphone","title":"case microphone","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/microwave","title":"case microwave","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/monkey","title":"case monkey","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/moon","title":"case moon","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/mosquito","title":"case mosquito","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/motorbike","title":"case motorbike","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/mountain","title":"case mountain","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/mouse","title":"case mouse","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/moustache","title":"case moustache","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/mouth","title":"case mouth","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/mug","title":"case mug","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/mushroom","title":"case mushroom","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/nail","title":"case nail","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/necklace","title":"case necklace","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/nose","title":"case nose","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/ocean","title":"case ocean","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/octagon","title":"case octagon","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/octopus","title":"case octopus","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/onion","title":"case onion","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/oven","title":"case oven","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/owl","title":"case owl","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/paintcan","title":"case paintCan","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/paintbrush","title":"case paintbrush","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/palmtree","title":"case palmTree","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/panda","title":"case panda","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/pants","title":"case pants","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/paperclip","title":"case paperClip","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/parachute","title":"case parachute","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/parrot","title":"case parrot","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/passport","title":"case passport","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/peanut","title":"case peanut","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/pear","title":"case pear","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/peas","title":"case peas","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/pencil","title":"case pencil","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/penguin","title":"case penguin","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/piano","title":"case piano","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/pickuptruck","title":"case pickupTruck","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/pictureframe","title":"case pictureFrame","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/pig","title":"case pig","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/pillow","title":"case pillow","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/pineapple","title":"case pineapple","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/pizza","title":"case pizza","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/pliers","title":"case pliers","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/policecar","title":"case policeCar","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/pond","title":"case pond","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/pool","title":"case pool","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/popsicle","title":"case popsicle","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/postcard","title":"case postcard","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/potato","title":"case potato","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/poweroutlet","title":"case powerOutlet","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/purse","title":"case purse","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/rabbit","title":"case rabbit","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/raccoon","title":"case raccoon","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/radio","title":"case radio","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/rain","title":"case rain","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/rainbow","title":"case rainbow","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/rake","title":"case rake","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/remotecontrol","title":"case remoteControl","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/rhinoceros","title":"case rhinoceros","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/rifle","title":"case rifle","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/river","title":"case river","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/rollercoaster","title":"case rollerCoaster","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/rollerskates","title":"case rollerskates","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/sailboat","title":"case sailboat","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/sandwich","title":"case sandwich","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/saw","title":"case saw","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/saxophone","title":"case saxophone","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/schoolbus","title":"case schoolBus","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/scissors","title":"case scissors","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/scorpion","title":"case scorpion","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/screwdriver","title":"case screwdriver","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/seaturtle","title":"case seaTurtle","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/seesaw","title":"case seeSaw","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/shark","title":"case shark","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/sheep","title":"case sheep","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/shoe","title":"case shoe","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/shorts","title":"case shorts","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/shovel","title":"case shovel","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/sink","title":"case sink","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/skateboard","title":"case skateboard","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/skull","title":"case skull","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/skyscraper","title":"case skyscraper","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/sleepingbag","title":"case sleepingBag","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/smileyface","title":"case smileyFace","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/snail","title":"case snail","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/snake","title":"case snake","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/snorkel","title":"case snorkel","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/snowflake","title":"case snowflake","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/snowman","title":"case snowman","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/soccerball","title":"case soccerBall","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/sock","title":"case sock","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/speedboat","title":"case speedboat","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/spider","title":"case spider","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/spoon","title":"case spoon","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/spreadsheet","title":"case spreadsheet","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/square","title":"case square","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/squiggle","title":"case squiggle","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/squirrel","title":"case squirrel","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/stairs","title":"case stairs","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/star","title":"case star","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/steak","title":"case steak","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/stereo","title":"case stereo","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/stethoscope","title":"case stethoscope","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/stitches","title":"case stitches","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/stopsign","title":"case stopSign","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/stove","title":"case stove","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/strawberry","title":"case strawberry","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/streetlight","title":"case streetlight","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/stringbean","title":"case stringBean","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/submarine","title":"case submarine","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/suitcase","title":"case suitcase","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/sun","title":"case sun","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/swan","title":"case swan","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/sweater","title":"case sweater","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/swingset","title":"case swingSet","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/sword","title":"case sword","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/syringe","title":"case syringe","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/table","title":"case table","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/teapot","title":"case teapot","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/telephone","title":"case telephone","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/television","title":"case television","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/tennisracquet","title":"case tennisRacquet","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/tent","title":"case tent","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/tiger","title":"case tiger","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/toaster","title":"case toaster","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/toe","title":"case toe","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/toilet","title":"case toilet","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/tooth","title":"case tooth","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/toothbrush","title":"case toothbrush","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/toothpaste","title":"case toothpaste","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/tornado","title":"case tornado","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/tractor","title":"case tractor","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/trafficlight","title":"case trafficLight","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/train","title":"case train","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/tree","title":"case tree","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/triangle","title":"case triangle","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/trombone","title":"case trombone","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/truck","title":"case truck","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/trumpet","title":"case trumpet","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/umbrella","title":"case umbrella","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/underwear","title":"case underwear","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/van","title":"case van","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/vase","title":"case vase","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/violin","title":"case violin","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/washingmachine","title":"case washingMachine","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/watermelon","title":"case watermelon","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/waterslide","title":"case waterslide","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/whale","title":"case whale","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/wheel","title":"case wheel","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/windmill","title":"case windmill","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/winebottle","title":"case wineBottle","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/wineglass","title":"case wineGlass","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/wristwatch","title":"case wristwatch","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/yoga","title":"case yoga","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/zebra","title":"case zebra","type":"case"},{"path":"\/documentation\/neuron\/quickdrawobject\/zigzag","title":"case zigzag","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/neuron\/quickdrawobject\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/neuron\/quickdrawobject\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/neuron\/quickdrawobject\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/neuron\/quickdrawobject\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/neuron\/quickdrawobject\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/neuron\/quickdrawobject\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/neuron\/quickdrawobject","title":"QuickDrawObject","type":"enum"}],"path":"\/documentation\/neuron","title":"Neuron","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}